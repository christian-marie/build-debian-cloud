# Default configs
apt_mirrors='http://http.debian.net/debian'
volume_size='10'

# Build-time info
build_dir="$(mktemp -d)"

trap "rm -rf ${build_dir}" EXIT

# List of options for avf subcommand
help="build-debian-cloud avf
This subcommand creates a Debian image for the Anchor Virtual Fleet platform.
It is capable of building both squeeze and wheezy images, for both i386 and
amd64.

Options (defaults in ${txtbld}bold${txtdef}):

${txtund}Bootstrapping${txtdef}
    --arch ARCH [i386|amd64]      Processor architecture of the image (${txtbld}${arch}${txtdef})
    --codename C [squeeze|wheezy] Debian version codename to bootstrap (${txtbld}${codename}${txtdef})
    --filesystem FS [ext2..4|xfs] Filesystem of the root volume (${txtbld}${filesystem}${txtdef})
    --volume-size SIZE            Default size of the root volume in GB (${txtbld}${volume_size}${txtdef})
    --plugin FILE                 Path to plugin script.
                                  Can be specified more than once.
    --name IMAGENAME              The name of the disk image to create.

    --timezone ZONE               Standard timezone (${txtbld}${timezone}${txtdef})
    --locale LOCALE               Standard locale (${txtbld}${locale}${txtdef})
    --charmap CHARMAP             Standard charmap (${txtbld}${charmap}${txtdef})

    --build-dir DIR               Base directory for the build process (${txtbld}${build_dir}${txtdef})

    --bootstrap-mirror \"URL\"      URL to pass to debootstrap
    --apt-mirrors \"URL[ URL...]\"  APT mirror URLs, space-separated (${txtbld}${apt_mirrors}${txtdef})

${txtund}Other options${txtdef}
    --debug                       Print debugging information
    --help                        Prints this help message
"

# Run through the parameters and save them to variables.
while [ $# -gt 0 ]; do
	case $1 in
		--name)             name=$2;                       shift 2 ;;
		--arch)             arch=$2;                       shift 2 ;;
		--codename)         codename=$2;                   shift 2 ;;
		--filesystem)       filesystem=$2;                 shift 2 ;;
		--volume-size)      volume_size=$2;                shift 2 ;;
		--bootstrap-mirror) bootstrap_mirror=$2;           shift 2 ;;
		--apt-mirrors)      apt_mirrors=$2;                shift 2 ;;
		--timezone)         timezone=$2;                   shift 2 ;;
		--locale)           locale=$2;                     shift 2 ;;
		--charmap)          charmap=$2;                    shift 2 ;;
		--build-dir)        build_dir=$2;                  shift 2 ;;
		--plugin)           plugins+=("$2");               shift 2 ;;
		--debug)            set -x;                        shift   ;;
		-h|--help)          printf -- "$help";             exit 0  ;;
		*)             die "Unrecognized option: $1" \
    "Type '$0 --help' to see a list of possible options"; ;;
	esac
done

[ -n "$name" ]             || die "You must specify --name"
[ "$volume_size" -gt "1" ] || die "--volume-size must be at least 2 (GB)"
[ "$UID" = "0" ]           || die "This command must be run as root.  Sorry."

# Standard "hook points" for plugins
TASK_PACKAGES="01-packages"
TASK_CREATE_VOLUME="10-create-volume"
TASK_MOUNT_VOLUME="13-mount-volume"
TASK_MOUNT_SPECIALS="15-mount-specials"
TASK_BOOTSTRAP="14-bootstrap"
TASK_APT_SOURCES="21-apt-sources"
TASK_APT_UPGRADE="22-apt-upgrade"
TASK_INITSCRIPTS="51-init-scripts"
TASK_UNMOUNT_SPECIALS="71-unmount-specials"
TASK_UNMOUNT_VOLUME="72-unmount-volume"
TASK_DELETE_VOLUME="85-delete-workspace"
